version: "3.8"
services:

  #=== Postgres Database ===#

  db:
    image: postgres:14
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - 5432 # internal only, use a docker shell to run psql
    networks:
      - backend

  #=== Fast API ===#

  api:
    container_name: api
    build:
      context: ./backend
    volumes:
      - ./backend/:/app/
    environment:
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: postgres
    restart: always
    depends_on:
      - db
    networks:
      - backend
      - frontend
    ports:
      - 8000 # Internal only

  #=== Frontend ===#
  
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      args:
        - API_BASE_URL=/api # is relative, because frontend is behind a reverse-proxy
    ports:
      - 3000 # internal only
    restart: always
    depends_on:
      - api
    networks:
      - frontend

  #=== Reverse Proxy ===#
  
  reverse-proxy:
    container_name: reverse-proxy
    image: nginx
    restart: always
    volumes:
      - type: bind
        source: ./reverse-proxy/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
      - type: bind
        source: ./reverse-proxy/index.html
        target: /etc/nginx/html/index.html
        read_only: true
      - type: bind
        source: ./reverse-proxy/ssl.crt
        target: /usr/local/nginx/conf/ssl.crt;
        read_only: true
      - type: bind
        source: ./reverse-proxy/ssl.key
        target: /usr/local/nginx/conf/ssl.key;
        read_only: true
    depends_on:
      - api
      - frontend
    networks:
      - frontend   

#=== Networks ===#

networks:
  frontend:
    name: frontend_network
  backend:
    name: backend_network
