version: "3.8"
services:

  #=== Database ===#

  database:
    image: postgres:14
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      - backend

  #=== API ===#

  api:
    container_name: api
    build:
      context: ./backend
    volumes:
      - ./backend/:/app/
    environment:
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: postgres
    restart: always
    depends_on:
      - database
    networks:
      - backend
      - frontend

  #=== Frontend ===#
  
  frontend:
    container_name: frontend
    build:
      context: ./frontend
    restart: always
    depends_on:
      - api
    networks:
      - frontend

     #=== Frontend ===#
  
  proxy:
    image: nginx
    restart: always
    volumes:
      - type: bind
        source: ./proxy/conf/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
      - type: bind
        source: ./proxy/html/index.html
        target: /etc/nginx/html/index.html
        read_only: true
    depends_on:
      - api
      - frontend
    networks:
      - frontend   

#=== Networks ===#

networks:
  frontend:
    name: frontend_network
  backend:
    name: backend_network